---
kind: pipeline
name: code-sanitize-webapps

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: "[git-clone-webapps]::[push,pull_request]::[master,"
  image: alpine/git
  commands:
  - git clone -b $DRONE_BRANCH --single-branch --depth 1 https://github.com/muzanella11/the-movie.git .
  - git checkout -b $DRONE_COMMIT
  when:
    branch:
      exclude:
      - master
      - demo
      - develop
      - release/*
    event:
    - push
    - pull_request

- name: "[code-sanitize-webapps]::[push,pull_request]::[mast"
  image: node:12.20.1-alpine
  commands:
  - apk update && apk upgrade
  - apk add git
  - apk add python make g++
  - yarn install
  - yarn lint
  when:
    branch:
      exclude:
      - master
      - demo
      - develop
      - release/*
    event:
    - push
    - pull_request

trigger:
  branch:
    exclude:
    - master
    - demo
    - develop
    - release/*
  event:
  - push
  - pull_request

---
kind: pipeline
name: deploy-to-prod

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: "[deploying-prod]::[push,pull_request]::[master,"
  image: appleboy/drone-ssh
  settings:
    host:
      from_secret: SSH_HOST
    username:
      from_secret: SSH_USER
    password:
      from_secret: SSH_PASSWORD
    port: 22
    script:
      - cd ./deploy/prod
      - rm -rf ./the-movie/
      - mkdir the-movie
      - cd ./the-movie
      - pwd
      - git clone git@github.com:muzanella11/the-movie.git .
      - git checkout -b master origin/master
      - docker stop the-movie-apps-prod || true
      - docker rm the-movie-apps-prod || true
      - docker rmi the-movie-apps-images-prod || true
      - docker build -f Dockerfile.prod -t the-movie-apps-images-prod .
      - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
      - docker run -d -p 4024:4024 --restart=on-failure --name the-movie-apps-prod the-movie-apps-images-prod
      - cd ./../
      - rm -rf ./the-movie/
  when:
    branch:
      include:
      - master
    event:
    - push
    - pull_request

trigger:
  branch:
    include:
    - master
  event:
  - push
  - pull_request

---
kind: pipeline
name: deploy-to-staging

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: "[deploying-staging]::[push,pull_request]::[staging,"
  image: appleboy/drone-ssh
  settings:
    host:
      from_secret: SSH_HOST
    username:
      from_secret: SSH_USER
    password:
      from_secret: SSH_PASSWORD
    port: 22
    script:
      - cd ./deploy/staging
      - rm -rf ./the-movie/
      - mkdir the-movie
      - cd ./the-movie
      - pwd
      - git clone git@github.com:muzanella11/the-movie.git .
      - git checkout -b staging origin/staging
      - docker stop the-movie-apps-staging || true
      - docker rm the-movie-apps-staging || true
      - docker rmi the-movie-apps-images-staging || true
      - docker build -f Dockerfile.staging -t the-movie-apps-images-staging .
      - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
      - docker run -d -p 4023:4023 --restart=on-failure --name the-movie-apps-staging the-movie-apps-images-staging
      - cd ./../
      - rm -rf ./the-movie/
  when:
    branch:
      include:
      - staging
    event:
    - push
    - pull_request

trigger:
  branch:
    include:
    - staging
  event:
  - push
  - pull_request

---
kind: pipeline
name: deploy-to-dev

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: "[deploying-dev]::[push,pull_request]::[develop,"
  image: appleboy/drone-ssh
  settings:
    host:
      from_secret: SSH_HOST
    username:
      from_secret: SSH_USER
    password:
      from_secret: SSH_PASSWORD
    port: 22
    script:
      - cd ./deploy/dev
      - rm -rf ./the-movie/
      - mkdir the-movie
      - cd ./the-movie
      - pwd
      - git clone git@github.com:muzanella11/the-movie.git .
      - git checkout -b develop origin/develop
      - docker stop the-movie-apps-dev || true
      - docker rm the-movie-apps-dev || true
      - docker rmi the-movie-apps-images-dev || true
      - docker build -f Dockerfile.develop -t the-movie-apps-images-dev .
      - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
      - docker run -d -p 4022:4022 --restart=on-failure --name the-movie-apps-dev the-movie-apps-images-dev
      - cd ./../
      - rm -rf ./the-movie/
  when:
    branch:
      include:
      - develop
    event:
    - push
    - pull_request

trigger:
  branch:
    include:
    - develop
  event:
  - push
  - pull_request

---
kind: pipeline
name: deploy-to-demo

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: "[deploying-demo]::[push,pull_request]::[demo,"
  image: appleboy/drone-ssh
  settings:
    host:
      from_secret: SSH_HOST
    username:
      from_secret: SSH_USER
    password:
      from_secret: SSH_PASSWORD
    port: 22
    script:
      - cd ./deploy/demo
      - rm -rf ./the-movie/
      - mkdir the-movie
      - cd ./the-movie
      - pwd
      - git clone git@github.com:muzanella11/the-movie.git .
      - git checkout -b demo origin/demo
      - docker stop the-movie-apps-demo || true
      - docker rm the-movie-apps-demo || true
      - docker rmi the-movie-apps-images-demo || true
      - docker build -f Dockerfile.demo -t the-movie-apps-images-demo .
      - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
      - docker run -d -p 4021:4021 --restart=on-failure --name the-movie-apps-demo the-movie-apps-images-demo
      - cd ./../
      - rm -rf ./the-movie/
  when:
    branch:
      include:
      - demo
    event:
    - push
    - pull_request

trigger:
  branch:
    include:
    - demo
  event:
  - push
  - pull_request

...
